package com.bingo.analyze;

import java.util.ArrayList;

import com.bingo.common.utils.Cham;
import com.bingo.common.utils.ChanLe;
import com.bingo.common.utils.Dan;
import com.bingo.common.utils.DauDit;
import com.bingo.common.utils.Ghep;
import com.bingo.common.utils.Kep;
import com.bingo.common.utils.OneHundred;
import com.bingo.common.utils.ToNho;
import com.bingo.common.utils.Tong;
import com.bingo.common.utils.Utils;

public class ExtracDe {
	
	public static ArrayList<ExtractObject> analyze(String syntax){
		ArrayList<ExtractObject> extractObjectArray = new ArrayList<>();
		
		ExtractObject obExtractObjectDe = ExtracDe.phanTichDe(syntax);
		if(obExtractObjectDe != null){
			extractObjectArray.add(obExtractObjectDe);
		}
		
		ExtractObject obExtractObjectDeBo = ExtracDe.phanTichDeBo(syntax);
		if(obExtractObjectDeBo != null){
			extractObjectArray.add(obExtractObjectDeBo);
		}
		ExtractObject obExtractObjectDeKepBang = ExtracDe.phanTichDeKepBang(syntax);
		if(obExtractObjectDeKepBang != null){
			extractObjectArray.add(obExtractObjectDeKepBang);
		}
		ExtractObject obExtractObjectDeKepLech = ExtracDe.phanTichDeKepLech(syntax);
		if(obExtractObjectDeKepLech != null){
			extractObjectArray.add(obExtractObjectDeKepLech);
		}
		ExtractObject obExtractObjectDeSatKep = ExtracDe.phanTichDeSatKep(syntax);
		if(obExtractObjectDeSatKep != null){
			extractObjectArray.add(obExtractObjectDeSatKep);
		}
		
		ExtractObject obExtractObjectDe100So = ExtracDe.phanTichDe100So(syntax);
		if(obExtractObjectDe100So != null){
			extractObjectArray.add(obExtractObjectDe100So);
		}
		
		ExtractObject obExtractObjectDeTong = ExtracDe.phanTichDeTong(syntax);
		if(obExtractObjectDeTong != null){
			extractObjectArray.add(obExtractObjectDeTong);
		}
		
		ExtractObject obExtractObjectDeTongChiaBa = ExtracDe.phanTichDeTongChiaBa(syntax);
		if(obExtractObjectDeTongChiaBa != null){
			extractObjectArray.add(obExtractObjectDeTongChiaBa);
		}
		
		ExtractObject obExtractObjectDeTongChiaBaDu1 = ExtracDe.phanTichDeTongChiaBaDu1(syntax);
		if(obExtractObjectDeTongChiaBaDu1 != null){
			extractObjectArray.add(obExtractObjectDeTongChiaBaDu1);
		}
		
		ExtractObject obExtractObjectDeTongChiaBaDu2 = ExtracDe.phanTichDeTongChiaBaDu2(syntax);
		if(obExtractObjectDeTongChiaBaDu2 != null){
			extractObjectArray.add(obExtractObjectDeTongChiaBaDu2);
		}
		
		ExtractObject obExtractObjectDeDau = ExtracDe.phanTichDeDau(syntax);
		if(obExtractObjectDeDau != null){
			extractObjectArray.add(obExtractObjectDeDau);
		}
		
		ExtractObject obExtractObjectDeCham = ExtracDe.phanTichDeCham(syntax);
		if(obExtractObjectDeCham != null){
			extractObjectArray.add(obExtractObjectDeCham);
		}
		
		ExtractObject obExtractObjectDeChanLe = ExtracDe.phanTichDeChanLe(syntax);
		if(obExtractObjectDeChanLe != null){
			extractObjectArray.add(obExtractObjectDeChanLe);
		}
		
		ExtractObject obExtractObjectDeToNho = ExtracDe.phanTichDeToNho(syntax);
		if(obExtractObjectDeToNho != null){
			extractObjectArray.add(obExtractObjectDeToNho);
		}
		
		ExtractObject obExtractObjectDeDan = ExtracDe.phanTichDeDan(syntax);
		if(obExtractObjectDeDan != null){
			extractObjectArray.add(obExtractObjectDeDan);
		}
		
		return extractObjectArray;
	}
	
	protected static ExtractObject phanTichDe(String syntax) {
		// de 17,12,21x50k
		boolean isRightSyntax = syntax.matches("de\\s*[0-9]+.*x[0-9]+\\s*k|de\\s*[0-9]+.*x[0-9]+\\s*d");
		ExtractObject extractObject = null;
		ArrayList<RemoveObject> removeNumbers = null;
		if (isRightSyntax) {
			removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
			extractObject = Utils.extractNumberAndUnitPrice(syntax, "de");
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}

	protected static ExtractObject phanTichDeBo(String syntax) {
		// de 17,12,21x50k
		syntax = syntax.replaceAll("bo[\\s]*([0-9]+)", "boj $1");
		boolean isRightSyntax = syntax.matches("de\\s*boj\\s*[0-9]+.*x[0-9]+\\s*k|de\\s*boj\\s*[0-9]+.*x[0-9]+\\s*d");
		ExtractObject extractObject = null;
		ArrayList<RemoveObject> removeNumbers = null;
		if (isRightSyntax) {
			syntax = syntax.replaceAll("boj", "");
			removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
			extractObject = Utils.extractNumberAndUnitPrice(syntax, "de boj");
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}

	
	protected static ExtractObject phanTichDeKepBang(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Kep.getKepBang(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeKepLech(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Kep.getKepLech(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeSatKep(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Kep.getSatKep(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDe100So(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = OneHundred.get100So(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeTong(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Tong.getTong(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeTongChiaBa(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Tong.getTongChiaBa(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeTongChiaBaDu1(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Tong.getTongChiaBaDu1(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeTongChiaBaDu2(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Tong.getTongChiaBaDu2(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeDau(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = DauDit.getDauDuoi(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeCham(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Cham.getCham(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeChanLe(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = ChanLe.getChanLe(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeToNho(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = ToNho.getToNho(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeDan(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Dan.getDan(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
	
	protected static ExtractObject phanTichDeGhep(String syntax) {
		ArrayList<RemoveObject> removeNumbers = Utils.extractRemoveNumber(Utils.getRemoveNumber(syntax));
		ExtractObject extractObject = Ghep.getGhep(syntax);
		if(extractObject != null){
			extractObject.RemoveNumbers = removeNumbers;
		}
		return extractObject;
	}
}
